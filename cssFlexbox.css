.containerFlex {
  background-color: rgb(199, 94, 115);
  display: flex;
  justify-content: center;
}

.containerFlex > div {
  background-color: #f1f1f1;
  margin: 20px;
  padding: 20px;
  font-size: 30px;
}
/*FLEX-CONTAINER:The flex container properties are:

flex-direction
flex-wrap
flex-flow
justify-content
align-items
align-content
The flex-flow property is a shorthand property for setting both the flex-direction and flex-wrap properties.Eg: flex-flow:row wrap;

The align-items property is used to align the flex items.In these examples we use a 200 pixels high container, to better demonstrate the align-items property.

Example
The center value aligns the flex items in the middle of the container:

.flex-container {
  display: flex;
  height: 200px;
  align-items: center;
}
The stretch value of align-items will stretch the items to fill the container.

ALIGN-CONTENT: It is used to align the flex lines .In these examples we use a 600 pixels high container, with the flex-wrap property set to wrap, to better demonstrate the align-content property.Center value display the flex lines at the center of the container,flex start displays content at the start of the container and flex-end will display lines at the end of the contaier.
*/
.containerFlex2 {
  background-color: rgb(26, 126, 240);
  display: flex;
  height: 300px;
  align-items: center;
}

.containerFlex2 > div {
  background-color: #f1f1f1;
  margin: 20px;
  padding: 20px;
  font-size: 30px;
}
.containerFlex3 {
  height: 300px;
  background-color: cyan;
  display: flex;
  flex-wrap: wrap;
  align-content: center;
}
.containerFlex3 > div {
  background-color: #f1f1f1;
  margin: 50px;
  padding: 20px;
  font-size: 30px;
}
/*FLEX-ITEMS:The direct child elements of a flex container automatically becomes flexible (flex) items.The flex item properties are:

order
flex-grow
flex-shrink
flex-basis
flex
align-self
1)The order property specifies the order of the flex items.The first flex item in the code does not have to appear as the first item in the layout.
The order value must be a number, default value is 0.Below is an example:applied in inline style*/

/*2)The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items.

3)The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items.The value must be a number, default value is 1.

4)The flex-basis property specifies the initial length of a flex item.

5)The flex property is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties.

6)The align-self property specifies the alignment for the selected item inside the flexible container.

The align-self property overrides the default alignment set by the container's align-items property.




In the below example we will not let the number 2 shrink as much as other numbers.

*/

.containerFlex4 {
  background-color: darkgoldenrod;
  display: flex;
}
.containerFlex4 > div {
  background-color: #f1f1f1;
  margin: 20px;
  padding: 20px;
  font-size: 30px;
}
